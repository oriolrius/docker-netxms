services:
  netxms-server:
    image: ghcr.io/oriolrius/docker-netxms-server:latest
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: netxms-server
    restart: unless-stopped
    tty: true
    ports:
      - "${NETXMS_SERVER_PORT:-4701}:4701"
      - "${NETXMS_TUNNEL_PORT:-4703}:4703"
    volumes:
      - ./data:/var/lib/netxms
      # - ${HOST_CONFIG_PATH:-./config}:/etc/netxms/conf.d:ro
    networks:
      netxms-network:
        ipv4_address: ${NETXMS_SERVER_IP:-172.20.0.2}
    environment:
      - DEBIAN_FRONTEND=noninteractive
    healthcheck:
      test: ["CMD", "sh", "-c", "netstat -ln | grep :4701"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  netxms-agent:
    image: ghcr.io/oriolrius/docker-netxms-agent:latest
    container_name: netxms-agent
    restart: unless-stopped
    privileged: true
    network_mode: host
    pid: host
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_ADMIN
    security_opt:
      - apparmor=unconfined
    environment:
      SERVER: "${NETXMS_SERVER_IP:-172.20.0.2}"
      MASTER_SERVERS: "${NETXMS_MASTER_SERVERS:-172.20.0.0/16}"
      DEBIAN_FRONTEND: noninteractive
      DEBUG_LEVEL: "${NETXMS_DEBUG_LEVEL:-1}"
    volumes:
      - /dev:/dev
      - /proc:/proc
      - /sys:/sys
      - /var/run:/var/run
      - ./agent:/var/lib/netxms
    healthcheck:
      test: ["CMD", "pgrep", "nxagentd"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"


networks:
  netxms-network:
    driver: bridge
    ipam:
      config:
        - subnet: ${DOCKER_SUBNET:-172.20.0.0/16}
          gateway: ${DOCKER_GATEWAY:-172.20.0.1}

volumes:
  netxms-server-data:
    driver: local
  netxms-server-logs:
    driver: local
  netxms-agent-data:
    driver: local
  netxms-agent-logs:
    driver: local
